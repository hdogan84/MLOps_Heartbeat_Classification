# CI INTEGRATION TEST WITH GITHUB ACTIONS
# This will use the unit-tests or the test.py files inside the docker container environment
# Current Version: Tests only the train api with the test_train.py script
# The test_train.py script with the tests is located inside the container and must therefore be located on one level / folder with the train.py script.
# Essentially this is the same procedure as in this repo from datascientest: https://github.com/DataScientest-Studio/juin23_continu_mlops_pompiers/tree/master/src
name: CI

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Launch docker compose
        run: |
          docker compose up --build -d
          sleep 10
      #- name: Delete content of MLFlow directory #to make sure, no models are available for testing. Or put mlflow on .gitignore    
      - name: Test train script with pytest
        run: |
          docker compose run --workdir /app train-api python -m pytest -v test_train.py 
      #- name: Test update script with pytest #this script should make use of the created Model in test_train.py (RFC_Ptbdb)
      
      - name: Close docker compose
        run: |
          docker compose down

      
